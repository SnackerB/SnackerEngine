<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>72</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>55</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>115</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>116</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>108</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>