<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>FontManager.cpp</FILENAME>
      <LINE>303</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::FontManager::initialize</FUNCTION>
    <DECORATED>?initialize@FontManager@SnackerEngine@@KAXAEBI@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdfgen\core\</FILEPATH>
      <FILENAME>Bitmap.hpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdfgen::Bitmap&lt;unsigned char,3&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Bitmap@E$02@msdfgen@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdfgen\core\</FILEPATH>
      <FILENAME>Bitmap.hpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdfgen::Bitmap&lt;unsigned char,3&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Bitmap@E$02@msdfgen@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdfgen\core\</FILEPATH>
      <FILENAME>Bitmap.hpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdfgen::Bitmap&lt;unsigned char,3&gt;::=</FUNCTION>
    <DECORATED>??4?$Bitmap@E$02@msdfgen@@QEAAAEAV01@AEBV01@@Z</DECORATED>
    <FUNCLINE>54</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdfgen\core\</FILEPATH>
      <FILENAME>Bitmap.hpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdfgen::Bitmap&lt;unsigned char,3&gt;::=</FUNCTION>
    <DECORATED>??4?$Bitmap@E$02@msdfgen@@QEAAAEAV01@AEBV01@@Z</DECORATED>
    <FUNCLINE>54</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>json.hpp</FILENAME>
      <LINE>4285</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26800</DEFECTCODE>
    <DESCRIPTION>Use of a moved from object: ''(*&lt;args_2&gt;)'' (lifetime.1).</DESCRIPTION>
    <FUNCTION>nlohmann::json_abi_v3_11_2::detail::concat</FUNCTION>
    <DECORATED>??$concat@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAY0BB@$$CBDAEBV12@DV12@AEAY02$$CBD@detail@json_abi_v3_11_2@nlohmann@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAY0BB@$$CBDAEBV34@$$QEAD$$QEAV34@AEAY02$$CBD@Z</DECORATED>
    <FUNCLINE>4281</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4281</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4283</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4282</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4284</LINE>
        <COLUMN>48</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4284</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4284</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4284</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4284</LINE>
        <COLUMN>48</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4284</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4284</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4285</LINE>
        <COLUMN>39</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4285</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>json.hpp</FILENAME>
        <LINE>4285</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdf-atlas-gen\</FILEPATH>
      <FILENAME>ImmediateAtlasGenerator.hpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>76</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdf_atlas::ImmediateAtlasGenerator&lt;float,3,&amp;msdf_atlas::msdfGenerator,msdf_atlas::BitmapAtlasStorage&lt;unsigned char,3&gt; &gt;::generate::&lt;lambda_1&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_1&gt;@?1??generate@?$ImmediateAtlasGenerator@M$02$1?msdfGenerator@msdf_atlas@@YAXAEBU?$BitmapRef@M$02@msdfgen@@AEBVGlyphGeometry@2@AEBUGeneratorAttributes@2@@ZV?$BitmapAtlasStorage@E$02@2@@msdf_atlas@@QEAAXPEBVGlyphGeometry@3@H@Z@QEBA_NHH@Z</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdf-atlas-gen\</FILEPATH>
      <FILENAME>ImmediateAtlasGenerator.hpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdf_atlas::ImmediateAtlasGenerator&lt;float,3,&amp;msdf_atlas::msdfGenerator,msdf_atlas::BitmapAtlasStorage&lt;unsigned char,3&gt; &gt;::generate</FUNCTION>
    <DECORATED>?generate@?$ImmediateAtlasGenerator@M$02$1?msdfGenerator@msdf_atlas@@YAXAEBU?$BitmapRef@M$02@msdfgen@@AEBVGlyphGeometry@2@AEBUGeneratorAttributes@2@@ZV?$BitmapAtlasStorage@E$02@2@@msdf_atlas@@QEAAXPEBVGlyphGeometry@2@H@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdf-atlas-gen\</FILEPATH>
      <FILENAME>ImmediateAtlasGenerator.hpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdf_atlas::ImmediateAtlasGenerator&lt;float,3,&amp;msdf_atlas::msdfGenerator,msdf_atlas::BitmapAtlasStorage&lt;unsigned char,3&gt; &gt;::generate</FUNCTION>
    <DECORATED>?generate@?$ImmediateAtlasGenerator@M$02$1?msdfGenerator@msdf_atlas@@YAXAEBU?$BitmapRef@M$02@msdfgen@@AEBVGlyphGeometry@2@AEBUGeneratorAttributes@2@@ZV?$BitmapAtlasStorage@E$02@2@@msdf_atlas@@QEAAXPEBVGlyphGeometry@2@H@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdf-atlas-gen\</FILEPATH>
      <FILENAME>ImmediateAtlasGenerator.hpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdf_atlas::ImmediateAtlasGenerator&lt;float,3,&amp;msdf_atlas::msdfGenerator,msdf_atlas::BitmapAtlasStorage&lt;unsigned char,3&gt; &gt;::generate</FUNCTION>
    <DECORATED>?generate@?$ImmediateAtlasGenerator@M$02$1?msdfGenerator@msdf_atlas@@YAXAEBU?$BitmapRef@M$02@msdfgen@@AEBVGlyphGeometry@2@AEBUGeneratorAttributes@2@@ZV?$BitmapAtlasStorage@E$02@2@@msdf_atlas@@QEAAXPEBVGlyphGeometry@2@H@Z</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdfgen\core\</FILEPATH>
      <FILENAME>Bitmap.hpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdfgen::Bitmap&lt;unsigned char,3&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Bitmap@E$02@msdfgen@@QEAA@AEBV01@@Z</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\Dependencies\msdf-atlas-gen-master\msdfgen\core\</FILEPATH>
      <FILENAME>Bitmap.hpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>msdfgen::Bitmap&lt;unsigned char,3&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Bitmap@E$02@msdfgen@@QEAA@AEBV01@@Z</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>MaterialManager.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::MaterialManager::getNewMaterialID</FUNCTION>
    <DECORATED>?getNewMaterialID@MaterialManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>27</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>MaterialManager.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::MaterialManager::getNewMaterialID</FUNCTION>
    <DECORATED>?getNewMaterialID@MaterialManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>27</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>MaterialManager.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::MaterialManager::initialize</FUNCTION>
    <DECORATED>?initialize@MaterialManager@SnackerEngine@@KAXAEBI@Z</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>MeshManager.cpp</FILENAME>
      <LINE>67</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::MeshManager::getNewMeshID</FUNCTION>
    <DECORATED>?getNewMeshID@MeshManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>MeshManager.cpp</FILENAME>
      <LINE>67</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::MeshManager::getNewMeshID</FUNCTION>
    <DECORATED>?getNewMeshID@MeshManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>MeshManager.cpp</FILENAME>
      <LINE>91</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::MeshManager::initialize</FUNCTION>
    <DECORATED>?initialize@MeshManager@SnackerEngine@@KAXAEBI@Z</DECORATED>
    <FUNCLINE>83</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>ModelManager.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::ModelManager::getNewModelID</FUNCTION>
    <DECORATED>?getNewModelID@ModelManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>ModelManager.cpp</FILENAME>
      <LINE>39</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::ModelManager::getNewModelID</FUNCTION>
    <DECORATED>?getNewModelID@ModelManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>ModelManager.cpp</FILENAME>
      <LINE>63</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::ModelManager::initialize</FUNCTION>
    <DECORATED>?initialize@ModelManager@SnackerEngine@@KAXAEBI@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>ShaderManager.cpp</FILENAME>
      <LINE>231</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::ShaderManager::getNewShaderID</FUNCTION>
    <DECORATED>?getNewShaderID@ShaderManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>226</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>ShaderManager.cpp</FILENAME>
      <LINE>231</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::ShaderManager::getNewShaderID</FUNCTION>
    <DECORATED>?getNewShaderID@ShaderManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>226</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>ShaderManager.cpp</FILENAME>
      <LINE>255</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::ShaderManager::initialize</FUNCTION>
    <DECORATED>?initialize@ShaderManager@SnackerEngine@@KAXAEBI@Z</DECORATED>
    <FUNCLINE>247</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>TextureManager.cpp</FILENAME>
      <LINE>362</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureManager::getNewTextureID</FUNCTION>
    <DECORATED>?getNewTextureID@TextureManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>357</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>TextureManager.cpp</FILENAME>
      <LINE>362</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureManager::getNewTextureID</FUNCTION>
    <DECORATED>?getNewTextureID@TextureManager@SnackerEngine@@CAIXZ</DECORATED>
    <FUNCLINE>357</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\AssetManager\</FILEPATH>
      <FILENAME>TextureManager.cpp</FILENAME>
      <LINE>421</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureManager::initialize</FUNCTION>
    <DECORATED>?initialize@TextureManager@SnackerEngine@@KAXAEBI@Z</DECORATED>
    <FUNCLINE>413</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1016</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad2</FUNCTION>
    <DECORATED>?stbi__malloc_mad2@@YAPEAXHHH@Z</DECORATED>
    <FUNCLINE>1013</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1016</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad2</FUNCTION>
    <DECORATED>?stbi__malloc_mad2@@YAPEAXHHH@Z</DECORATED>
    <FUNCLINE>1013</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1023</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad3</FUNCTION>
    <DECORATED>?stbi__malloc_mad3@@YAPEAXHHHH@Z</DECORATED>
    <FUNCLINE>1020</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1023</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad3</FUNCTION>
    <DECORATED>?stbi__malloc_mad3@@YAPEAXHHHH@Z</DECORATED>
    <FUNCLINE>1020</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1023</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad3</FUNCTION>
    <DECORATED>?stbi__malloc_mad3@@YAPEAXHHHH@Z</DECORATED>
    <FUNCLINE>1020</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1030</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1027</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1030</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1027</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1030</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1027</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1030</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__malloc_mad4</FUNCTION>
    <DECORATED>?stbi__malloc_mad4@@YAPEAXHHHHH@Z</DECORATED>
    <FUNCLINE>1027</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1154</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_8_to_16</FUNCTION>
    <DECORATED>?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z</DECORATED>
    <FUNCLINE>1148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1173</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__vertical_flip</FUNCTION>
    <DECORATED>?stbi__vertical_flip@@YAXPEAXHHH@Z</DECORATED>
    <FUNCLINE>1164</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1173</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__vertical_flip</FUNCTION>
    <DECORATED>?stbi__vertical_flip@@YAXPEAXHHH@Z</DECORATED>
    <FUNCLINE>1164</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1713</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1698</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1713</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1698</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1714</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1698</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1714</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format</FUNCTION>
    <DECORATED>?stbi__convert_format@@YAPEAEPEAEHHII@Z</DECORATED>
    <FUNCLINE>1698</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1763</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1755</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1763</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1755</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1763</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1755</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1770</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1755</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1770</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1755</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1771</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1755</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1771</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__convert_format16</FUNCTION>
    <DECORATED>?stbi__convert_format16@@YAPEAGPEAGHHII@Z</DECORATED>
    <FUNCLINE>1755</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>1838</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_to_ldr</FUNCTION>
    <DECORATED>?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z</DECORATED>
    <FUNCLINE>1827</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2965</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2890</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2998</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2890</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2908</LINE>
      <COLUMN>85</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2890</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2908</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2890</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2908</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2890</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>2937</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__parse_entropy_coded_data</FUNCTION>
    <DECORATED>?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>2890</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3035</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3025</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3037</LINE>
      <COLUMN>85</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3025</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3037</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3025</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3037</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__jpeg_finish</FUNCTION>
    <DECORATED>?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z</DECORATED>
    <FUNCLINE>3025</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3510</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__resample_row_hv_2_simd</FUNCTION>
    <DECORATED>?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z</DECORATED>
    <FUNCLINE>3453</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3942</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>6011</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer 'y'. </DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3788</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3790</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3790</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3790</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3791</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3794</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3797</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3800</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3802</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3804</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3807</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3811</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3812</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3812</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3813</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3814</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3816</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3818</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3818</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3841</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3842</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3845</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3845</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3846</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3847</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3847</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3861</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3910</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3921</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3932</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3940</LINE>
        <COLUMN>29</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'y' may be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3941</LINE>
        <COLUMN>26</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume 'n==1')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3942</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3942</LINE>
        <COLUMN>38</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'i&lt;z-&gt;s-&gt;img_x')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>3942</LINE>
        <COLUMN>65</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'y' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3823</LINE>
      <COLUMN>72</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3788</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3846</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3788</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>3846</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>load_jpeg_image</FUNCTION>
    <DECORATED>?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z</DECORATED>
    <FUNCLINE>3788</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4610</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4583</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4619</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4583</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4702</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4583</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4715</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4583</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4716</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4583</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4716</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4583</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4767</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image_raw</FUNCTION>
    <DECORATED>?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z</DECORATED>
    <FUNCLINE>4583</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4832</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4802</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4832</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4802</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4832</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4802</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4833</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4802</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4833</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4802</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>4833</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__create_png_image</FUNCTION>
    <DECORATED>?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z</DECORATED>
    <FUNCLINE>4802</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5606</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5430</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5606</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5430</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5607</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5430</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5607</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5430</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5607</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__bmp_load</FUNCTION>
    <DECORATED>?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5430</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5830</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__tga_load</FUNCTION>
    <DECORATED>?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>5830</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__tga_load</FUNCTION>
    <DECORATED>?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>5765</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6107</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__psd_load</FUNCTION>
    <DECORATED>?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z</DECORATED>
    <FUNCLINE>6028</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6107</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__psd_load</FUNCTION>
    <DECORATED>?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z</DECORATED>
    <FUNCLINE>6028</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6195</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__psd_load</FUNCTION>
    <DECORATED>?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z</DECORATED>
    <FUNCLINE>6028</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6208</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__psd_load</FUNCTION>
    <DECORATED>?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z</DECORATED>
    <FUNCLINE>6028</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6333</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__pic_load_core</FUNCTION>
    <DECORATED>?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z</DECORATED>
    <FUNCLINE>6300</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6333</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__pic_load_core</FUNCTION>
    <DECORATED>?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z</DECORATED>
    <FUNCLINE>6300</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6437</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__pic_load</FUNCTION>
    <DECORATED>?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>6411</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6437</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__pic_load</FUNCTION>
    <DECORATED>?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>6411</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6707</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6692</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6708</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6692</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6716</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6692</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6717</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6692</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6753</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6692</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6753</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6692</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6757</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__gif_load_next</FUNCTION>
    <DECORATED>?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z</DECORATED>
    <FUNCLINE>6692</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6914</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>6308</DEFECTCODE>
    <DESCRIPTION>'realloc' might return null pointer: assigning null pointer to '*delays', which is passed as an argument to 'realloc', will cause the original memory block to be leaked.</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6874</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6874</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '35028' bytes of stack.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6874</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6932</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>28182</DEFECTCODE>
    <DESCRIPTION>Dereferencing NULL pointer. '*delays' contains the same NULL value as 'realloc()`6914' did. </DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6874</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6876</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6877</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6878</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6879</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6880</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6881</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6882</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6883</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6884</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6885</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6886</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6887</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6891</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6892</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6894</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6895</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6896</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6897</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6898</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6900</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6919</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6920</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6921</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6922</LINE>
        <COLUMN>32</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6923</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6926</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6927</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6931</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6932</LINE>
        <COLUMN>43</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6935</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6891</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6892</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6894</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6895</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6896</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6897</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6898</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6900</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6901</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6902</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6909</LINE>
        <COLUMN>28</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6910</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6913</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6914</LINE>
        <COLUMN>32</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'*delays' may be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6915</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6926</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6927</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume 'layers&gt;=2')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6928</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6931</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume 'delays')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image.h</FILENAME>
        <LINE>6932</LINE>
        <COLUMN>43</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'*delays' is dereferenced, but may still be NULL</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6901</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6874</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6919</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6874</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6926</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6874</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6926</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6874</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6928</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__load_gif_main</FUNCTION>
    <DECORATED>?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z</DECORATED>
    <FUNCLINE>6874</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>6954</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '34980' bytes of stack.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>stbi__gif_load</FUNCTION>
    <DECORATED>?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>6954</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7131</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7066</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7131</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7066</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7131</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7066</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7190</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7066</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7190</LINE>
      <COLUMN>56</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7066</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7190</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7066</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image.h</FILENAME>
      <LINE>7190</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi__hdr_load</FUNCTION>
    <DECORATED>?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z</DECORATED>
    <FUNCLINE>7066</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>471</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbiw__write_pixels</FUNCTION>
    <DECORATED>?stbiw__write_pixels@@YAXPEAUstbi__write_context@@HHHHHPEAXHHH@Z</DECORATED>
    <FUNCLINE>451</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>471</LINE>
      <COLUMN>61</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbiw__write_pixels</FUNCTION>
    <DECORATED>?stbiw__write_pixels@@YAXPEAUstbi__write_context@@HHHHHPEAXHHH@Z</DECORATED>
    <FUNCLINE>451</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>471</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbiw__write_pixels</FUNCTION>
    <DECORATED>?stbiw__write_pixels@@YAXPEAUstbi__write_context@@HHHHHPEAXHHH@Z</DECORATED>
    <FUNCLINE>451</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>566</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_tga_core</FUNCTION>
    <DECORATED>?stbi_write_tga_core@@YAHPEAUstbi__write_context@@HHHPEAX@Z</DECORATED>
    <FUNCLINE>536</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>566</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_tga_core</FUNCTION>
    <DECORATED>?stbi_write_tga_core@@YAHPEAUstbi__write_context@@HHHPEAX@Z</DECORATED>
    <FUNCLINE>536</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>570</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_tga_core</FUNCTION>
    <DECORATED>?stbi_write_tga_core@@YAHPEAUstbi__write_context@@HHHPEAX@Z</DECORATED>
    <FUNCLINE>536</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>576</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_tga_core</FUNCTION>
    <DECORATED>?stbi_write_tga_core@@YAHPEAUstbi__write_context@@HHHPEAX@Z</DECORATED>
    <FUNCLINE>536</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>576</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_tga_core</FUNCTION>
    <DECORATED>?stbi_write_tga_core@@YAHPEAUstbi__write_context@@HHHPEAX@Z</DECORATED>
    <FUNCLINE>536</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>580</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_tga_core</FUNCTION>
    <DECORATED>?stbi_write_tga_core@@YAHPEAUstbi__write_context@@HHHPEAX@Z</DECORATED>
    <FUNCLINE>536</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>592</LINE>
      <COLUMN>55</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_tga_core</FUNCTION>
    <DECORATED>?stbi_write_tga_core@@YAHPEAUstbi__write_context@@HHHPEAX@Z</DECORATED>
    <FUNCLINE>536</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>606</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_tga_core</FUNCTION>
    <DECORATED>?stbi_write_tga_core@@YAHPEAUstbi__write_context@@HHHPEAX@Z</DECORATED>
    <FUNCLINE>536</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>780</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_hdr_core</FUNCTION>
    <DECORATED>?stbi_write_hdr_core@@YAHPEAUstbi__write_context@@HHHPEAM@Z</DECORATED>
    <FUNCLINE>774</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>794</LINE>
      <COLUMN>75</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_hdr_core</FUNCTION>
    <DECORATED>?stbi_write_hdr_core@@YAHPEAUstbi__write_context@@HHHPEAM@Z</DECORATED>
    <FUNCLINE>774</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>794</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_hdr_core</FUNCTION>
    <DECORATED>?stbi_write_hdr_core@@YAHPEAUstbi__write_context@@HHHPEAM@Z</DECORATED>
    <FUNCLINE>774</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>846</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>Buffer overrun while writing to 'p'.</DESCRIPTION>
    <FUNCTION>stbiw__sbgrowf</FUNCTION>
    <DECORATED>?stbiw__sbgrowf@@YAPEAXPEAPEAXHH@Z</DECORATED>
    <FUNCLINE>840</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>842</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>843</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'p' is a 0 byte array</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>845</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume 'p')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>846</LINE>
        <COLUMN>12</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this branch, (assume '!*arr')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>846</LINE>
        <COLUMN>32</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid write to 'p', (outside its writable range)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>843</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbiw__sbgrowf</FUNCTION>
    <DECORATED>?stbiw__sbgrowf@@YAPEAXPEAPEAXHH@Z</DECORATED>
    <FUNCLINE>840</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>943</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_zlib_compress</FUNCTION>
    <DECORATED>stbi_zlib_compress</DECORATED>
    <FUNCLINE>909</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>961</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_zlib_compress</FUNCTION>
    <DECORATED>stbi_zlib_compress</DECORATED>
    <FUNCLINE>909</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>1114</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbiw__encode_png_line</FUNCTION>
    <DECORATED>?stbiw__encode_png_line@@YAXPEAEHHHHHHPEAC@Z</DECORATED>
    <FUNCLINE>1107</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>1118</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbiw__encode_png_line</FUNCTION>
    <DECORATED>?stbiw__encode_png_line@@YAXPEAEHHHHHHPEAC@Z</DECORATED>
    <FUNCLINE>1107</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>1175</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>Reading invalid data from 'line_buffer'.</DESCRIPTION>
    <FUNCTION>stbi_write_png_to_mem</FUNCTION>
    <DECORATED>stbi_write_png_to_mem</DECORATED>
    <FUNCLINE>1143</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1145</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1146</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1147</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1148</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1148</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1148</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1148</LINE>
        <COLUMN>39</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1149</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1150</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1150</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1152</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1155</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1159</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1159</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1160</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'line_buffer' is a 0 byte array</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1160</LINE>
        <COLUMN>57</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '!line_buffer' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1161</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1161</LINE>
        <COLUMN>18</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'j&lt;y')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1162</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1163</LINE>
        <COLUMN>25</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume 'force_filter&gt;-1' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1168</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1168</LINE>
        <COLUMN>63</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1168</LINE>
        <COLUMN>68</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1169</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1169</LINE>
        <COLUMN>46</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'filter_type&lt;5')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1170</LINE>
        <COLUMN>38</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'line_buffer' is an In/Out argument to 'stbiw__encode_png_line' (declared on line 1107)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1173</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1174</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1174</LINE>
        <COLUMN>30</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Enter this loop, (assume 'i&lt;x*n')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1175</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1174</LINE>
        <COLUMN>39</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'i' may equal 1</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1174</LINE>
        <COLUMN>30</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Continue this loop, (assume 'i&lt;x*n')</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1175</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'i' is an Input to 'abs' (declared at c:\program files (x86)\windows kits\10\include\10.0.19041.0\ucrt\stdlib.h:293)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1175</LINE>
        <COLUMN>24</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid read from 'line_buffer', (outside its readable range)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>1202</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>Buffer overrun while writing to 'o'.</DESCRIPTION>
    <FUNCTION>stbi_write_png_to_mem</FUNCTION>
    <DECORATED>stbi_write_png_to_mem</DECORATED>
    <FUNCLINE>1143</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1145</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1146</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1147</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1148</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1148</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1148</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1148</LINE>
        <COLUMN>39</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1149</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1150</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1150</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1152</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1155</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1159</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1159</LINE>
        <COLUMN>62</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1160</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1160</LINE>
        <COLUMN>57</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1161</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1161</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1191</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1192</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1193</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1194</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1197</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'out' is a 0 byte array</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1198</LINE>
        <COLUMN>8</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Skip this branch, (assume '!out' is false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1201</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>alias</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>(alias) 'o' receives the value of 'out'</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1202</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'o' is an In/Out argument to 'memmove' (declared at c:\program files\microsoft visual studio\2022\community\vc\tools\msvc\14.33.31629\include\vcruntime_string.h:50)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
        <FILENAME>stb_image_write.h</FILENAME>
        <LINE>1202</LINE>
        <COLUMN>4</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>Invalid write to 'o', (outside its writable range)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>1159</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_png_to_mem</FUNCTION>
    <DECORATED>stbi_write_png_to_mem</DECORATED>
    <FUNCLINE>1143</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>1160</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_png_to_mem</FUNCTION>
    <DECORATED>stbi_write_png_to_mem</DECORATED>
    <FUNCLINE>1143</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>1189</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_png_to_mem</FUNCTION>
    <DECORATED>stbi_write_png_to_mem</DECORATED>
    <FUNCLINE>1143</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\External\</FILEPATH>
      <FILENAME>stb_image_write.h</FILENAME>
      <LINE>1197</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>stbi_write_png_to_mem</FUNCTION>
    <DECORATED>stbi_write_png_to_mem</DECORATED>
    <FUNCLINE>1143</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>Material.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SnackerEngine::Material::materialID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SnackerEngine::Material::{ctor}</FUNCTION>
    <DECORATED>??0Material@SnackerEngine@@QEAA@AEBVShader@1@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SnackerEngine::Material::materialID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>Material.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SnackerEngine::Material::materialID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SnackerEngine::Material::{ctor}</FUNCTION>
    <DECORATED>??0Material@SnackerEngine@@QEAA@$$QEAV?$unique_ptr@UMaterialData@SnackerEngine@@U?$default_delete@UMaterialData@SnackerEngine@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SnackerEngine::Material::materialID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>227</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>228</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>228</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>231</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>232</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>232</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>235</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>236</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>236</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>237</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>237</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>240</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>241</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>241</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>242</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Cube.cpp</FILENAME>
      <LINE>242</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshCube</FUNCTION>
    <DECORATED>?createMeshCube@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>200</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>66</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>67</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>67</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>70</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>71</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>71</LINE>
      <COLUMN>35</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Plane.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshPlane</FUNCTION>
    <DECORATED>?createMeshPlane@SnackerEngine@@YA?AVMesh@1@AEB_N00@Z</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>105</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>108</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>111</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>111</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>112</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>112</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>113</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>113</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>114</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>114</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>115</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>115</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>116</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>116</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>118</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\Meshes\</FILEPATH>
      <FILENAME>Sphere.cpp</FILENAME>
      <LINE>118</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::createMeshUVSphere</FUNCTION>
    <DECORATED>?createMeshUVSphere@SnackerEngine@@YA?AVMesh@1@AEBI0@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>Model.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SnackerEngine::Model::modelID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SnackerEngine::Model::{ctor}</FUNCTION>
    <DECORATED>??0Model@SnackerEngine@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SnackerEngine::Model::modelID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>Model.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SnackerEngine::Model::modelID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SnackerEngine::Model::{ctor}</FUNCTION>
    <DECORATED>??0Model@SnackerEngine@@QEAA@AEBV?$vector@VMesh@SnackerEngine@@V?$allocator@VMesh@SnackerEngine@@@std@@@std@@@Z</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SnackerEngine::Model::modelID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>Model.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'SnackerEngine::Model::modelID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>SnackerEngine::Model::{ctor}</FUNCTION>
    <DECORATED>??0Model@SnackerEngine@@QEAA@AEBVMesh@1@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>SnackerEngine::Model::modelID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>81</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>72</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>55</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBH@Z</DECORATED>
    <FUNCLINE>37</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>115</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>116</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>108</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>109</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Graphics\</FILEPATH>
      <FILENAME>TextureDataBuffer.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::TextureDataBuffer::setSingleValue</FUNCTION>
    <DECORATED>?setSingleValue@TextureDataBuffer@SnackerEngine@@AEAAXAEBIAEBM@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\GuiElements\</FILEPATH>
      <FILENAME>GuiWindow.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>89</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::GuiWindow::isCollidingWithResizeButton</FUNCTION>
    <DECORATED>?isCollidingWithResizeButton@GuiWindow@SnackerEngine@@IEAA_NAEBU?$Vec2@H@2@@Z</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\GuiElements\</FILEPATH>
      <FILENAME>GuiWindow.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::GuiWindow::isCollidingWithResizeButton</FUNCTION>
    <DECORATED>?isCollidingWithResizeButton@GuiWindow@SnackerEngine@@IEAA_NAEBU?$Vec2@H@2@@Z</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\</FILEPATH>
      <FILENAME>GuiManager.cpp</FILENAME>
      <LINE>200</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::GuiManager::{ctor}</FUNCTION>
    <DECORATED>??0GuiManager@SnackerEngine@@QEAA@AEBI@Z</DECORATED>
    <FUNCLINE>199</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\</FILEPATH>
      <FILENAME>GuiManager.cpp</FILENAME>
      <LINE>200</LINE>
      <COLUMN>84</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::GuiManager::{ctor}</FUNCTION>
    <DECORATED>??0GuiManager@SnackerEngine@@QEAA@AEBI@Z</DECORATED>
    <FUNCLINE>199</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\Layouts\</FILEPATH>
      <FILENAME>HorizontalLayout.cpp</FILENAME>
      <LINE>92</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::HorizontalLayout::callbackMouseMotion</FUNCTION>
    <DECORATED>?callbackMouseMotion@HorizontalLayout@SnackerEngine@@EEAAXAEBU?$Vec2@N@2@@Z</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\Layouts\</FILEPATH>
      <FILENAME>HorizontalLayout.cpp</FILENAME>
      <LINE>92</LINE>
      <COLUMN>95</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::HorizontalLayout::callbackMouseMotion</FUNCTION>
    <DECORATED>?callbackMouseMotion@HorizontalLayout@SnackerEngine@@EEAAXAEBU?$Vec2@N@2@@Z</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\Layouts\</FILEPATH>
      <FILENAME>HorizontalLayout.cpp</FILENAME>
      <LINE>93</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::HorizontalLayout::callbackMouseMotion</FUNCTION>
    <DECORATED>?callbackMouseMotion@HorizontalLayout@SnackerEngine@@EEAAXAEBU?$Vec2@N@2@@Z</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\Layouts\</FILEPATH>
      <FILENAME>VerticalLayout.cpp</FILENAME>
      <LINE>93</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::VerticalLayout::callbackMouseMotion</FUNCTION>
    <DECORATED>?callbackMouseMotion@VerticalLayout@SnackerEngine@@EEAAXAEBU?$Vec2@N@2@@Z</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\Layouts\</FILEPATH>
      <FILENAME>VerticalLayout.cpp</FILENAME>
      <LINE>93</LINE>
      <COLUMN>95</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::VerticalLayout::callbackMouseMotion</FUNCTION>
    <DECORATED>?callbackMouseMotion@VerticalLayout@SnackerEngine@@EEAAXAEBU?$Vec2@N@2@@Z</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\Layouts\</FILEPATH>
      <FILENAME>VerticalLayout.cpp</FILENAME>
      <LINE>94</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::VerticalLayout::callbackMouseMotion</FUNCTION>
    <DECORATED>?callbackMouseMotion@VerticalLayout@SnackerEngine@@EEAAXAEBU?$Vec2@N@2@@Z</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\Text\</FILEPATH>
      <FILENAME>Text.cpp</FILENAME>
      <LINE>1450</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::EditableText::deleteWordAfterCursor</FUNCTION>
    <DECORATED>?deleteWordAfterCursor@EditableText@SnackerEngine@@QEAAXXZ</DECORATED>
    <FUNCLINE>1436</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\Text\</FILEPATH>
      <FILENAME>Text.cpp</FILENAME>
      <LINE>1450</LINE>
      <COLUMN>80</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::EditableText::deleteWordAfterCursor</FUNCTION>
    <DECORATED>?deleteWordAfterCursor@EditableText@SnackerEngine@@QEAAXXZ</DECORATED>
    <FUNCLINE>1436</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Gui\Text\</FILEPATH>
      <FILENAME>Text.cpp</FILENAME>
      <LINE>1450</LINE>
      <COLUMN>130</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::EditableText::deleteWordAfterCursor</FUNCTION>
    <DECORATED>?deleteWordAfterCursor@EditableText@SnackerEngine@@QEAAXXZ</DECORATED>
    <FUNCLINE>1436</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Math\</FILEPATH>
      <FILENAME>VectorAlgorithms.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::computeTangentBiTangent</FUNCTION>
    <DECORATED>?computeTangentBiTangent@SnackerEngine@@YA?AU?$pair@V?$vector@U?$Vec3@M@SnackerEngine@@V?$allocator@U?$Vec3@M@SnackerEngine@@@std@@@std@@V12@@std@@AEBV?$vector@U?$Vec3@M@SnackerEngine@@V?$allocator@U?$Vec3@M@SnackerEngine@@@std@@@3@AEBV?$vector@U?$Vec2@M@SnackerEngine@@V?$allocator@U?$Vec2@M@SnackerEngine@@@std@@@3@AEBV?$vector@IV?$allocator@I@std@@@3@AEB_N@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Math\</FILEPATH>
      <FILENAME>VectorAlgorithms.cpp</FILENAME>
      <LINE>20</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::computeTangentBiTangent</FUNCTION>
    <DECORATED>?computeTangentBiTangent@SnackerEngine@@YA?AU?$pair@V?$vector@U?$Vec3@M@SnackerEngine@@V?$allocator@U?$Vec3@M@SnackerEngine@@@std@@@std@@V12@@std@@AEBV?$vector@U?$Vec3@M@SnackerEngine@@V?$allocator@U?$Vec3@M@SnackerEngine@@@std@@@3@AEBV?$vector@U?$Vec2@M@SnackerEngine@@V?$allocator@U?$Vec2@M@SnackerEngine@@@std@@@3@AEBV?$vector@IV?$allocator@I@std@@@3@AEB_N@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Math\</FILEPATH>
      <FILENAME>VectorAlgorithms.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::computeTangentBiTangent</FUNCTION>
    <DECORATED>?computeTangentBiTangent@SnackerEngine@@YA?AU?$pair@V?$vector@U?$Vec3@M@SnackerEngine@@V?$allocator@U?$Vec3@M@SnackerEngine@@@std@@@std@@V12@@std@@AEBV?$vector@U?$Vec3@M@SnackerEngine@@V?$allocator@U?$Vec3@M@SnackerEngine@@@std@@@3@AEBV?$vector@U?$Vec2@M@SnackerEngine@@V?$allocator@U?$Vec2@M@SnackerEngine@@@std@@@3@AEBV?$vector@IV?$allocator@I@std@@@3@AEB_N@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\benja\Documents\dev\SnackerEngine 2.0\SnackerEngine\SnackerEngine\src\Math\</FILEPATH>
      <FILENAME>VectorAlgorithms.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>SnackerEngine::computeTangentBiTangent</FUNCTION>
    <DECORATED>?computeTangentBiTangent@SnackerEngine@@YA?AU?$pair@V?$vector@U?$Vec3@M@SnackerEngine@@V?$allocator@U?$Vec3@M@SnackerEngine@@@std@@@std@@V12@@std@@AEBV?$vector@U?$Vec3@M@SnackerEngine@@V?$allocator@U?$Vec3@M@SnackerEngine@@@std@@@3@AEBV?$vector@U?$Vec2@M@SnackerEngine@@V?$allocator@U?$Vec2@M@SnackerEngine@@@std@@@3@AEBV?$vector@IV?$allocator@I@std@@@3@AEB_N@Z</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>